@page "/login"
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject HttpClient Http
@inject ApplicationDbContext Db
@using Microsoft.EntityFrameworkCore

<h3>Login</h3>

<div class="mb-3">
    <label for="utdId" class="form-label">UTD ID</label>
    <input @bind="loginModel.UtdId" class="form-control" />
</div>
<div class="mb-3">
    <label for="password" class="form-label">Password</label>
    <input @bind="loginModel.Password" type="password" class="form-control" />
</div>

<button class="btn btn-primary" @onclick="HandleLogin">Login</button>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p class="text-danger">@errorMessage</p>
}
<p>Your Public IP Address: @ipAddress</p>
@code {
    private LoginModel loginModel = new();
    private string errorMessage;

    private async Task HandleLogin()
    {
        var user = await Db.Students.FirstOrDefaultAsync(s =>
            s.UtdId == loginModel.UtdId && s.Password == loginModel.Password);

        if (user is not null)
        {
            Navigation.NavigateTo($"/quiz?utdId={loginModel.UtdId}&password={loginModel.Password}");

        }
        else
        {
            errorMessage = "Invalid UTD ID or password.";
        }
    }

    public class LoginModel
    {
        public string UtdId { get; set; }
        public string Password { get; set; }
    }
}


@code {
    private string ipAddress = "Loading...";

    protected override async Task OnInitializedAsync()
    {
        // Make an API call to an external service to get the public IP address
        try
        {
            ipAddress = await Http.GetStringAsync("https://api.ipify.org");
        }
        catch
        {
            ipAddress = "Unable to fetch IP";
        }
    }
}
